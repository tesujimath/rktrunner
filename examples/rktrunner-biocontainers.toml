rkt = "/usr/bin/rkt"
preserve-cwd = true
use-path = true
worker-pods = true
exec-slave-dir = "/usr/libexec/rktrunner"
default-interactive-cmd = "sh"

[environment]
# these are passed in a file, not on the command line
HOME = "/home/{{.Username}}"
USER = "{{.Uid}}"
LOGNAME = "{{.Uid}}"
http_proxy = "{{.http_proxy}}"
https_proxy = "{{.https_proxy}}"
TERM = "{{.TERM}}"
COLORTERM = "{{.COLORTERM}}"
DISPLAY = "{{.DISPLAY}}"
SSH_AUTH_SOCK = "{{.SSH_AUTH_SOCK}}"

[options.common]
general = ["--insecure-options=image"]
run = [
    "--net=host",
    # local nameservers, so container can resolve web proxy
    "--dns=147.158.128.110",
    "--dns=147.158.105.4",
    "--dns=147.158.128.45",
]
image = [
    "--user={{.Uid}}",
    "--group={{.Gid}}",
    "--seccomp", "mode=retain,@docker/default-whitelist,mbind",  # for Julia, see https://github.com/rkt/rkt/issues/3651
    "--stage1-path=/usr/lib/rkt/stage1-images/stage1-fly.aci",
]

[volume.tmp]
volume = "kind=host,source=/tmp"
mount = "target=/tmp"

[volume.home]
volume = "kind=host,source={{.HomeDir}}"
mount = "target=/home/{{.Username}}"

[volume.dataset]
volume = "kind=host,source=/dataset"
mount = "target=/dataset"

[volume.bifo]
volume = "kind=host,source=/bifo,recursive=true"
mount = "target=/bifo"

[volume.volume-config]
volume = "kind=empty,uid={{.Uid}},gid={{.Gid}}"
on-request = true

[volume.volume-data]
volume = "kind=empty,uid={{.Uid}},gid={{.Gid}}"
on-request = true

#
# Aliases - keep alphabetical
#
# By convention, we append an underscore to the aliases for images
# which don't have a default executable.
#

[alias.alpine-sh_]
image = "quay.io/coreos/alpine-sh"
# for testing:
environment-update = ["DISPLAY"]

[alias.blast_]
image = "quay.io/biocontainers/blast:2.6.0--boost1.61_0"
exec = ["/usr/local/bin/blastn","/usr/local/bin/blastp","/usr/local/bin/blastx","/usr/local/bin/tblastn","/usr/local/bin/tblastx"]

[alias.breseq_]
image = "quay.io/biocontainers/breseq:0.29.0--r3.3.2_0"
exec = ["/usr/local/bin/breseq"]
[alias.breseq_.environment]
# bowtie2 et al are installed in /usr/local, which is broken, but can be handled here:
PATH = "/usr/local/sbin:/usr/local/bin:/usr/local:/usr/sbin:/usr/bin:/sbin:/bin"

[alias.bwa_]
image = "quay.io/biocontainers/bwa:0.7.15--0"
exec = ["/usr/local/bin/bwa"]

[alias.emacs_]
image = "docker://silex/emacs"
exec = ["/usr/local/bin/emacs"]
passwd = ["{{.Uid}}:x:{{.Uid}}:{{.Uid}}::/home/{{.Username}}:/bin/bash"]
group = ["{{.Uid}}:x:{{.Uid}}:"]
host-timezone = true
environment-update = ["DISPLAY"]
environment-blacklist = ["http_proxy","https_proxy"]
[alias.emacs_.environment]
PATH = "{{.PATH}}"
GOROOT = "{{.GOROOT}}"

[alias.julia_]
image = "docker://julia"
exec = ["/usr/local/julia/bin/julia"]

[alias.qiime_]
image = "quay.io/biocontainers/qiime:1.9.1--py27_0"

[alias.ruby_]
image = "docker://ruby"
exec = ["/usr/local/bin/ruby", "/usr/local/bin/irb"]

[alias.samtools_]
image = "quay.io/biocontainers/samtools:1.4.1--0"
exec = ["/usr/local/bin/samtools"]
